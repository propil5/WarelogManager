@inherits LayoutComponentBase
@using Blazored.Toast.Configuration

@inject IJSRuntime js


<div class="page @mode">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4 auth">
            <LoginDisplay />
            <div class="custom-control custom-switch">
              <input type="checkbox" class="custom-control-input" id="darkModeSwitch" @bind="DarkMode" />
              <label class="custom-control-label" for="darkModeSwitch">Dark Mode</label>
            </div>
            <NavLink href="/aboout">About</NavLink><br />
        </div>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div> 

<BlazoredToasts Position="ToastPosition.TopCenter"
                Timeout="15"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="thumbs-up"
                ErrorClass="warning-toast-override"
                ErrorIcon="thumbs-down">
    
</BlazoredToasts>

@code{
    private bool darkMode;
    private bool DarkMode
    {
        get => darkMode;
        set
        {
            darkMode = value;
            ModeChangedAsync();
        }
    }
    private string mode => DarkMode ? "dark-mode" : "";
    private const string keyDarkMode = "dark-mode";

    protected override async Task OnInitializedAsync()
    {
        var darkModeStorageSetting = "false";
        try
        {
            darkModeStorageSetting = await js.InvokeAsync<string>("readLocalStorage", keyDarkMode);
            DarkMode = darkModeStorageSetting.ToLower().Contains("true");
        }
        catch (NullReferenceException)
        {
        }
    }

    private async Task ModeChangedAsync()
    {
        await js.InvokeVoidAsync("addToLocalStorage", keyDarkMode, DarkMode);
    }
}
